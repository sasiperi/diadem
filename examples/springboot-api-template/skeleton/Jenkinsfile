pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "sp-maven"
    }

    stages {
        stage("Checkout Step"){
            steps{
                checkout(
                    [
                        $class: 'GitSCM',
                        branches: [[name: '*/main']],
                        extensions: [],
                        userRemoteConfigs: [
                            [
                                credentialsId: 'git-hub-pt0ken',
                                url: 'https://github.com/${{values.destination.owner + "/" + values.destination.repo}}'
                            ]
                        ]
                    ]
            )

        }

        }

        stage('Build') {
            steps {


                // Run Maven on a Unix agent.
                sh "mvn -Dmaven.test.failure.ignore=true clean package"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }
        }
         stage('Build Images') {
            steps {

                	// Run Maven on a Unix agent.
                	sh "mvn spring-boot:build-image -DskipTests"
                }

        }
        stage('Deploy') {
            steps {

                sh "helm upgrade --install ${{values.destination.repo+'-chart'}} helm/${{values.destination.repo+'-chart'}} --namespace ${{values.namespace | default}}"

            }

            post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    junit '**/target/surefire-reports/TEST-*.xml'
                    archiveArtifacts 'target/*.jar'
                }
            }
        }
    }
}

